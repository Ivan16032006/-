Практическая №8
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization.Formatters.Binary;

[Serializable]
public class User
{
    public string FullName { get; set; }
    public DateTime DateOfBirth { get; set; }
    public string Education { get; set; }
    public int Experience { get; set; }
    public string Position { get; set; }
    public decimal Salary { get; set; }
    public string Login { get; set; }
    public string Password { get; set; }

    public int Age => DateTime.Now.Year - DateOfBirth.Year - (DateTime.Now.DayOfYear < DateOfBirth.DayOfYear ? 1 : 0);
}

[Serializable]
public class Product
{
    public string Name { get; set; }
    public int Quantity { get; set; }
    public DateTime ExpiryDate { get; set; }
    public string Category { get; set; }
    public decimal Price { get; set; }
    public string StoreName { get; set; }

    public bool IsExpired => ExpiryDate < DateTime.Now;
    public decimal GetDiscountedPrice() => IsExpired ? Price * 0.5m : Price;
}

public static class UserManager
{
    private static List<User> users;

    static UserManager()
    {
        users = LoadUsers();
    }

    public static List<User> GetUsers() => users;

    public static void AddUser(User user)
    {
        if (users.Any(u => u.Login == user.Login))
            throw new Exception("Пользователь с таким логином уже существует.");

        users.Add(user);
        SaveUsers();
    }

    // Логика сохранения и загрузки пользователей
    private static List<User> LoadUsers()
    {
        string filePath = "users.dat";
        if (!File.Exists(filePath))
        {
            var admin = new User
            {
                FullName = "Admin",
                DateOfBirth = new DateTime(1980, 1, 1),
                Education = "None",
                Experience = 0,
                Position = "Administrator",
                Login = "admin",
                Password = "Admin1234#"
            };
            return new List<User> { admin };
        }

        using (FileStream fs = new FileStream(filePath, FileMode.Open))
        {
#pragma warning disable SYSLIB0011 // Тип или член устарел
            BinaryFormatter formatter = new();
#pragma warning restore SYSLIB0011 // Тип или член устарел
            return (List<User>)formatter.Deserialize(fs);
        }
    }

    private static void SaveUsers()
    {
        using (FileStream fs = new FileStream("users.dat", FileMode.Create))
        {
#pragma warning disable SYSLIB0011 // Тип или член устарел
            var formatter = new BinaryFormatter();
#pragma warning restore SYSLIB0011 // Тип или член устарел
            formatter.Serialize(fs, users);
        }
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        Console.Title = "Информационная система предприятия";
        Console.WriteLine("Вход в систему:");

        while (true)
        {
            Console.Write("Введите логин: ");
            string login = Console.ReadLine();

            Console.Write("Введите пароль: ");
            string password = ReadPassword();

            var user = UserManager.GetUsers().FirstOrDefault(u => u.Login == login && u.Password == password);
            if (user != null)
            {
                Console.WriteLine($"Добро пожаловать, {user.FullName}!");
                ShowUserMenu(user);
                break;
            }
            Console.WriteLine("Неверный логин или пароль. Попробуйте еще раз.");
        }
    }

    private static void ShowUserMenu(User user)
    {
        // Логика отображения меню пользователя
        Console.WriteLine("Меню пользователя:");
        Console.WriteLine("1. Выйти из системы");
        Console.WriteLine("2. Выход из аккаунта");

        // Другие функции будут реализованы в зависимости от роли пользователя
    }

    private static string ReadPassword()
    {
        string password = string.Empty;
        ConsoleKeyInfo key;
        do
        {
            key = Console.ReadKey(true);
            if (key.Key != ConsoleKey.Enter)
            {
                password += key.KeyChar;
                Console.Write("*");
            }
        } while (key.Key != ConsoleKey.Enter);
        return password;
    }
}
