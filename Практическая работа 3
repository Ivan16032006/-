Array 8
using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        int[] array = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

        List<int> oddNumbers = new List<int>();

        foreach (int number in array)
        {
            if (number % 2 != 0)
            {
                oddNumbers.Add(number);
            }
        }

        Console.WriteLine("Нечётные числа:");
        foreach (int oddNumber in oddNumbers)
        {
            Console.WriteLine(oddNumber);
        }

        int K = oddNumbers.Count;
        Console.WriteLine($"Количество нечётных чисел: {K}");
    }
}


Matrix 2
using System;

class Program
{
    static void Main()
    {
        Console.Write("Введите количество строк M: ");
        int M = int.Parse(Console.ReadLine());

        Console.Write("Введите количество столбцов N: ");
        int N = int.Parse(Console.ReadLine());

        int[,] matrix = new int[M, N];

        for (int j = 0; j < N; j++)
        {
            int value = 5 * (j + 1);
            for (int i = 0; i < M; i++)
            {
                matrix[i, j] = value;
            }
        }

        Console.WriteLine("Сформированная матрица:");
        for (int i = 0; i < M; i++)
        {
            for (int j = 0; j < N; j++)
            {
                Console.Write(matrix[i, j] + "\t");
            }
            Console.WriteLine();
        }
    }
}

Array 124
using System;

class Program
{
    static void Main()
    {
        Запрашиваем у пользователя размер массива
        Console.Write("Введите размер массива (N): ");
        int N = int.Parse(Console.ReadLine());

        Проверка на допустимый размер массива
        if (N <= 0)
        {
            Console.WriteLine("Размер массива должен быть больше 0.");
            return;
        }

        Создание массива заданного размера
        int[] array = new int[N];

        Запрашиваем значения массива у пользователя
        Console.WriteLine("Введите элементы массива:");
        for (int i = 0; i < N; i++)
        {
            Console.Write($"Элемент {i + 1}: ");
            array[i] = int.Parse(Console.ReadLine());
        }

        Запрашиваем значение K
        Console.Write("Введите целое число K (>0): ");
        int K = int.Parse(Console.ReadLine());

        Проверка, что K больше 0
        if (K <= 0)
        {
            Console.WriteLine("K должно быть больше 0.");
            return;
        }

        Проверка, что K не больше количества элементов массива
        if (K > N)
        {
            Console.WriteLine("Количество серий меньше K, массив остается без изменений.");
        }
        else
        {
            Поменять местами серию K(K-1 в массиве) и последнюю серию(N - 1 в массиве)
            int temp = array[K - 1];
            array[K - 1] = array[N - 1];
            array[N - 1] = temp;

            Выводим измененный массив
            Console.WriteLine("Измененный массив:");
            foreach (int num in array)
            {
                Console.WriteLine(num);
            }
        }
    }
}

Matrix 61
using System;

class Program
{
    static void Main()
    {
        Запрашиваем размеры матрицы
        Console.Write("Введите количество строк матрицы (M): ");
        int M = int.Parse(Console.ReadLine());

        Console.Write("Введите количество столбцов матрицы (N): ");
        int N = int.Parse(Console.ReadLine());

        Проверка на допустимые размеры матрицы
        if (M <= 0 || N <= 0)
        {
            Console.WriteLine("Количество строк и столбцов должно быть больше 0.");
            return;
        }

        Создание матрицы заданного размера
        int[,] matrix = new int[M, N];

        Запрашиваем значения матрицы у пользователя
        Console.WriteLine("Введите элементы матрицы:");
        for (int i = 0; i < M; i++)
        {
            for (int j = 0; j < N; j++)
            {
                Console.Write($"Элемент [{i + 1}, {j + 1}]: ");
                matrix[i, j] = int.Parse(Console.ReadLine());
            }
        }

        Запрашиваем значение K
        Console.Write("Введите номер строки для удаления (K, 1 <= K <= M): ");
        int K = int.Parse(Console.ReadLine());

        Проверка, что K находится в допустимом диапазоне
        if (K < 1 || K > M)
        {
            Console.WriteLine("Номер строки K должен быть в диапазоне от 1 до M.");
            return;
        }

        Создание новой матрицы, в которой будет отсутствовать строка K
        int[,] newMatrix = new int[M - 1, N];

        for (int i = 0, newRow = 0; i < M; i++)
        {
            if (i == K - 1) // пропускаем строку K
                continue;

            for (int j = 0; j < N; j++)
            {
                newMatrix[newRow, j] = matrix[i, j];
            }
            newRow++;
        }

        Выводим новую матрицу
        Console.WriteLine("Новая матрица:");
        for (int i = 0; i < M - 1; i++)
        {
            for (int j = 0; j < N; j++)
            {
                Console.Write($"{newMatrix[i, j]} ");
            }
            Console.WriteLine();
        }
    }
}
